# # This is a basic workflow to help you get started with Actions

# name: My-GitHubActions-Basics
# env:
#   APPLICATION_NAME  : "MyFlask"
#   DEPLOY_PACKAGE_NAME      : "flask-deploy-ver-${{ github.sha }}"
# # Controls when the action will run. 
# on:
#   # Triggers the workflow on push or pull request events but only for the master branch
#   push:
#     branches: 
#       - master
#       - development

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   my_testing:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest
#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - name: echo GITHUB variables
#         run: |
#           echo ${GITHUB_REF##*/}
#           echo ${GITHUB_HEAD_REF}
#           echo ${GITHUB_BASE_REF}
      
#       - name: Print Hello message in Testing
#         run: echo "Hello world form Testing job"

#       - name: Execute few commands with commit message
#         run: |
#           echo "Hello Message1"
#           echo "Hello Message2"
#           echo "Application name: ${{ env.APPLICATION_NAME }}"
#           echo "HEAD Commit: ${{ github.event.head_commit.message }}"
#         if: ${{ github.event.head_commit.message != 'build version update' }}

#       - name: List current folder
#         run: ls -la
      
#       - name: Git clone my repo
#         uses: actions/checkout@v1
      
#       - name: List current folder
#         run: ls -la
        
#   my_deploy:
#     runs-on: ubuntu-latest
#     needs:
#       - my_testing
#     env:
#       VAR1: "This is Job Level Variable 1"
#       VAR2: "This is Job Level Variable 2"
    
#     steps:
#       - name: Print Hello message in Deploy
#         run : echo "Hello world from Deploy job"
    
#       - name: Print env vars
#         run: |
#           echo "Var1 = ${{ env.VAR1 }}"
#           echo "Var2 = ${{ env.VAR2 }}"
#           echo "Var3 = $LOCAL_VAR"
#         env:
#           LOCAL_VAR: "This is Super local Environment variable"
    
#       - name: Printing Deployment package
#         run : echo "Deploys package name in ${{ env.DEPLOY_PACKAGE_NAME }}"
  
#       - name: Lets test some packages if they are here 1
#         run: aws --version
        
#       - name: Lets test some packages if they are here 2
#         run: zip --version


# name: Deploy Serverless
# on:
#   push:
#     branches:
#       - master
# jobs:
#   deploy-dev:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v1
#     - name: Create env file
#       run: |
#         cat > .env << EOF
#         ${{ secrets.ENV }}
#         EOF
#     - name: Cat env file
#       run: |
#         cat .env

name: Pipeline to test project auto-assignment to issue
on:
  issues:
    types: [opened]
env:
  GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
jobs:
  assign_one_project:
    runs-on: ubuntu-latest
    name: Assign to One Project
    steps:
    - name: Assign NEW issues and NEW pull requests to project 1
      uses: srggrs/assign-one-project-github-action@1.2.1
      if: github.event.action == 'opened'
      with:
        project: 'https://github.com/users/nizamutdinovb/projects/1'
